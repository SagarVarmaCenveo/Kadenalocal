//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.KDA;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(ProductCategory.CLASS_NAME, typeof(ProductCategory))]

namespace CMS.DocumentEngine.Types.KDA
{
	/// <summary>
	/// Represents a content item of type ProductCategory.
	/// </summary>
	public partial class ProductCategory : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "KDA.ProductCategory";


		/// <summary>
		/// The instance of the class that provides extended API for working with ProductCategory fields.
		/// </summary>
		private readonly ProductCategoryFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// ProductCategoryID.
		/// </summary>
		[DatabaseIDField]
		public int ProductCategoryID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("ProductCategoryID"), 0);
			}
			set
			{
				SetValue("ProductCategoryID", value);
			}
		}


		/// <summary>
		/// Title.
		/// </summary>
		[DatabaseField]
		public string ProductCategoryTitle
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductCategoryTitle"), "");
			}
			set
			{
				SetValue("ProductCategoryTitle", value);
			}
		}


		/// <summary>
		/// Image.
		/// </summary>
		[DatabaseField]
		public string ProductCategoryImage
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductCategoryImage"), "");
			}
			set
			{
				SetValue("ProductCategoryImage", value);
			}
		}


		/// <summary>
		/// Description.
		/// </summary>
		[DatabaseField]
		public string ProductCategoryDescription
		{
			get
			{
				return ValidationHelper.GetString(GetValue("ProductCategoryDescription"), "");
			}
			set
			{
				SetValue("ProductCategoryDescription", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with ProductCategory fields.
		/// </summary>
		[RegisterProperty]
		public ProductCategoryFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with ProductCategory fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class ProductCategoryFields : AbstractHierarchicalObject<ProductCategoryFields>
		{
			/// <summary>
			/// The content item of type ProductCategory that is a target of the extended API.
			/// </summary>
			private readonly ProductCategory mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="ProductCategoryFields" /> class with the specified content item of type ProductCategory.
			/// </summary>
			/// <param name="instance">The content item of type ProductCategory that is a target of the extended API.</param>
			public ProductCategoryFields(ProductCategory instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// ProductCategoryID.
			/// </summary>
			public int ID
			{
				get
				{
					return mInstance.ProductCategoryID;
				}
				set
				{
					mInstance.ProductCategoryID = value;
				}
			}


			/// <summary>
			/// Title.
			/// </summary>
			public string Title
			{
				get
				{
					return mInstance.ProductCategoryTitle;
				}
				set
				{
					mInstance.ProductCategoryTitle = value;
				}
			}


			/// <summary>
			/// Image.
			/// </summary>
			public string Image
			{
				get
				{
					return mInstance.ProductCategoryImage;
				}
				set
				{
					mInstance.ProductCategoryImage = value;
				}
			}


			/// <summary>
			/// Description.
			/// </summary>
			public string Description
			{
				get
				{
					return mInstance.ProductCategoryDescription;
				}
				set
				{
					mInstance.ProductCategoryDescription = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="ProductCategory" /> class.
		/// </summary>
		public ProductCategory() : base(CLASS_NAME)
		{
			mFields = new ProductCategoryFields(this);
		}

		#endregion
	}
}