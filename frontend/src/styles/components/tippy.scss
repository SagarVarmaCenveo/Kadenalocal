/* stylelint-disable */
@mixin enter-transform ($position, $animation) {
  @if ($animation == 'perspective') {
    @if ($position == 'top') {
      transform: translateY(-10px) rotateX(0);
    } @else if ($position == 'bottom') {
      transform: translateY(10px) rotateX(0);
    } @else if ($position == 'left') {
      transform: translateX(-10px) rotateY(0);
    } @else if ($position == 'right') {
      transform: translateX(10px) rotateY(0);
    }
  } @else if ($animation == 'fade') {
    @if ($position == 'top') {
      transform: translateY(-10px);
    } @else if ($position == 'bottom') {
      transform: translateY(10px);
    } @else if ($position == 'left') {
      transform: translateX(-10px);
    } @else if ($position == 'right') {
      transform: translateX(10px);
    }
  } @else if ($animation == 'scale') {
    @if ($position == 'top') {
      transform: translateY(-10px) scale(1);
    } @else if ($position == 'bottom') {
      transform: translateY(10px) scale(1);
    } @else if ($position == 'left') {
      transform: translateX(-10px) scale(1);
    } @else if ($position == 'right') {
      transform: translateX(10px) scale(1);
    }
  }
}

@mixin leave-transform ($position, $animation) {
  @if ($animation == 'perspective') {
    @if ($position == 'top') {
      transform: translateY(0) rotateX(90deg);
    } @else if ($position == 'bottom') {
      transform: translateY(0) rotateX(-90deg);
    } @else if ($position == 'left') {
      transform: translateX(0) rotateY(-90deg);
    } @else if ($position == 'right') {
      transform: translateX(0) rotateY(90deg);
    }
  } @else if ($animation == 'shift') {
    @if ($position == 'top') {
      transform: translateY(0);
    } @else if ($position == 'bottom') {
      transform: translateY(0);
    } @else if ($position == 'left') {
      transform: translateX(0);
    } @else if ($position == 'right') {
      transform: translateX(0);
    }
  } @else if ($animation == 'scale') {
    @if ($position == 'top') {
      transform: translateY(0) scale(0);
    } @else if ($position == 'bottom') {
      transform: translateY(0) scale(0);
    } @else if ($position == 'left') {
      transform: translateX(0) scale(0);
    } @else if ($position == 'right') {
      transform: translateX(0) scale(0);
    }
  } @else if ($animation == 'none') {
    @if ($position == 'top') {
      transform: translateY(-10px);
    } @else if ($position == 'bottom') {
      transform: translateY(10px);
    } @else if ($position == 'left') {
      transform: translateX(-10px);
    } @else if ($position == 'right') {
      transform: translateX(10px);
    }
  }
}

@mixin circle-transform-leave ($position) {
  @if ($position == 'top') {
    transform: scale(0) translate(-50%, -50%);
  } @else if ($position == 'bottom') {
    transform: scale(0) translate(-50%, -50%);
  } @else if ($position == 'left') {
    transform: scale(0) translate(-50%, -33%);
  } @else if ($position == 'right') {
    transform: scale(0) translate(-50%, -33%);
  }
}

@mixin arrow ($position, $width) {
  @if ($position == 'top') {
    transform: rotate(-45deg);
    bottom: -$width/2;
  } @else if ($position == 'bottom') {
    transform: rotate(135deg);
    top: -$width/2;
  } @else if ($position == 'left') {
    transform: rotate(225deg);
    right: -$width/2;
    top: 50%;
  } @else if ($position == 'right') {
    transform: rotate(45deg);
    left: -$width/2;
    top: 50%;
  }
}

@mixin arrow-styling ($position, $color) {
  @if ($position == 'top') {
    border-top: 8px solid $color;
  } @else if ($position == 'bottom') {
    border-bottom: 8px solid $color;
  } @else if ($position == 'left') {
    border-left: 8px solid $color;
  } @else if ($position == 'right') {
    border-right: 8px solid $color;
  }
}

$positions: 'top', 'bottom', 'left', 'right';
$origins: bottom, top, right, left;
$arrow-width: 10px;

.tippy-touch {
  cursor: pointer !important;
}

.tippy-popper {
  visibility: hidden;
  max-width: 400px;
  perspective: 800px;
  z-index: 9999;

  &.html-template {
    max-width: 96%;
    max-width: calc(100% - 20px);
  }

  @each $position in $positions {
    &[x-placement=#{$position}] {

      [x-arrow] {
        @include arrow($position, $arrow-width);
      }

      $circle-origins: 0% 50%, 0% -50%, 50% 0%, -50% 0%;

      [x-circle] {
        transform-origin: nth($circle-origins, index($positions, $position));

        &.enter {
          opacity: 1;
          transform: scale(1) translate(-50%, -47.5%);
        }

        &.leave {
          opacity: 0;
          @include circle-transform-leave($position);
        }
      }

      [data-animation=none] {
        &.enter {
          opacity: 1;
          @include enter-transform($position, 'fade');
        }

        &.leave {
          opacity: 1;
          @include leave-transform($position, 'none');
        }
      }

      [data-animation=perspective] {
        transform-origin: nth($origins, index($positions, $position));

        &.enter {
          opacity: 1;
          @include enter-transform($position, 'perspective');
        }

        &.leave {
          opacity: 0;
          @include leave-transform($position, 'perspective');
        }
      }

      [data-animation=fade] {
        &.enter {
          opacity: 1;
          @include enter-transform($position, 'fade')
        }
        &.leave {
          opacity: 0;
          @include enter-transform($position, 'fade')
        }
      }

      [data-animation=shift] {
        &.enter {
          opacity: 1;
          @include enter-transform($position, 'fade')
        }
        &.leave {
          opacity: 0;
          @include leave-transform($position, 'shift')
        }
      }

      [data-animation=scale] {
        &.enter {
          opacity: 1;
          @include enter-transform($position, 'scale')
        }
        &.leave {
          opacity: 0;
          @include leave-transform($position, 'scale')
        }
      }

    }
  }
}

.tippy-tooltip {
  position: relative;
  font-size: $font-xs;
  color: $brand-darker;
  border-radius: 4px;
  padding: .3rem .5rem;
  text-align: center;
  will-change: transform;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: $brand-info-light;
  border: 1px solid $brand-info;
  line-height: 1;

  [x-arrow] {
    z-index: -1;
    position: absolute;
    width: $arrow-width;
    height: $arrow-width;
    background-color: $brand-info-light;
    border: 1px solid;
    border-color: transparent transparent $brand-info $brand-info;
  }

  &[data-animatefill] {
    overflow: hidden;
    background-color: transparent;
  }

  &[data-inertia] {
    // Safari/Webkit can't go out of range
    -webkit-transition-timing-function: cubic-bezier(.53,1,.36,.85);
    transition-timing-function: cubic-bezier(.53,2,.36,.85);
  }

  [x-circle] {
    position: absolute;
    will-change: transform;
    background-color: #333;
    border-radius: 50%;
    width: 120%;
    width: calc(100% + 2rem);
    left: 50%;
    transition: all ease-out;
    z-index: -1;
    opacity: 0;
    overflow: hidden;

    &::before {
      content: '';
      padding-top: 100%;
      padding-top: calc(75% + 2rem);
      float: left;
    }
  }

  // Themes

  &.light-theme {
    color: #203d5d;
    box-shadow: 0 3px 7px 1px rgba($brand-dark, 0.2);
    background-color: white;
    border: 1px solid $brand-lightgrey;

    [x-circle] {
      background-color: #f3f6f9;
    }

    [x-arrow] {
      background-color: white;
      border-color: transparent transparent $brand-lightgrey $brand-lightgrey;
    }

    &[data-animatefill] {
      background-color: transparent;
    }
  }
}

// Fix for iOS animateFill circle
.tippy-iOS-fix {
  &.tippy-popper[x-placement=top] [x-circle].leave {
    transform: scale(0) translate3d(-50%, -50%, 0)
  }
  &.tippy-popper[x-placement=bottom] [x-circle].leave {
    transform: scale(0) translate3d(-50%, -50%, 0)
  }
  &.tippy-popper[x-placement=left] [x-circle].leave {
    transform: scale(0) translate3d(-50%, -33%, 0)
  }
  &.tippy-popper[x-placement=right] [x-circle].leave {
    transform: scale(0) translate3d(-50%, -33%, 0)
  }
}

@media (max-width: 500px) {
  .tippy-popper {
    max-width: 96%;
    max-width: calc(100% - 20px);
  }
}
/* stylelint-enable */
