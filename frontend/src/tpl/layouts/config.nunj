<script>
  var PATH = 'http://localhost:{{ _mockPort }}/api/';

  var config = {
    localization: {
      notification: {
        removeProduct: {
          title: 'Success',
          text: 'The product has been removed'
        },
        addProduct: {
          title: 'Success',
          text: 'The product has been added'
        },
        recentOrdersError: {
          title: 'Recent orders could not be loaded',
          // title is also from errorMessage
        },
        addAddress: {
          title: 'Success',
          text: 'The new address has been added'
        },
        modifyAddress: {
          title: 'Success',
          text: 'The address has been changed'
        },
        wrongAddressesRemoved: {
          title: 'Success',
          text: 'The addresses with errors have been removed'
        },
        serverNotAvailable: {
          title: 'Error',
          text: 'The server is not available'
        },
        spotfireError: {
          title: 'Error',
          text: 'The Spotfire is not available'
        },
        chiliNotAvailable: {
          title: 'Error',
          text: 'The Chili is not available'
        },
        chiliSaved: {
          title: 'Success',
          text: 'The template has been saved'
        },
        checkoutValidation: {
          deliveryMethod: {
            title: 'Validation Error',
            text: 'Delivery Method is invalid'
          },
          paymentMethod: {
            title: 'Validation Error',
            text: 'Payment Method is invalid'
          },
          deliveryAddress: {
            title: 'Validation Error',
            text: 'Delivery Address is invalid'
          },
          invoice: {
            title: 'Validation Error',
            text: 'PO number is invalid'
          },
          emailConfirmation: {
            title: 'Validation Error',
            text: 'Emails is invalid'
          }
        }
      },
      languages: {
        locale: 'ja-jp',
        selected: 'English',
        url: '#',
        languages: [
          {
            code: '1',
            language: 'English',
            url: '#English'
          },
          {
            code: '2',
            language: 'French',
            url: '#French'
          },
          {
            code: '3',
            language: 'German',
            url: '#German'
          }
        ]
      },
      emailProof: {
        submitUrl: PATH + 'email-proof',
        notificationSuccess: {
          title: 'üöÄüí™‚úàÔ∏èüéâ',
          text: 'Sent!'
        },
        dialog: {
          title: 'Email Proof',
          recepientEmailLabel: 'Enter Email Address',
          subjectLabel: 'Subject',
          messageLabel: 'Message',
          proofLabel: 'Click Here to View the Proof',
          submitButtonLabel: 'Submit',
          cancelButtonLabel: 'Cancel',
          note: 'This is note',
          validationMessages: {
            required: 'Required',
            email: 'Not Email'
          }
        }
      },
      staticFields: {
        validation: {
          requiredMessage: 'The field is required',
          optionalLabel: 'optional'
        },
        password: {
          show: 'show',
          hide: 'hide',
        }
      },
      registration: {
        title: 'Sign Up',
        labels: {
          firstName: 'First Name',
          lastName: 'Last Name',
          email: 'Email',
          password: 'Password',
          confirmPassword: 'Confirm Password',
          button: 'Sign Up'
        },
        errors: {
          required: 'Required!',
          email: 'Invalid Email!',
          confirmPassword: 'Passwords are not equal'
        },
        url: PATH + 'registration',
        toLogin: {
          url: 'lol',
          text: 'To Login'
        },
        strength: {
          minLength: 3,
          preferedLength: 7,
          minNonAlphaNumChars: 0,
          preferedNonAlphaNumChars: 0,
          regularExpression: null,
          policyStrings: [
            'Not Accepted',
            'Weak',
            'Acceptable',
            'Average',
            'Strong',
            'Excelent'
          ],
          usePolicy: true,
          info: 'Hello <br> How Are you? <br> Nice!'
        },
        loginModal: {
          body: 'Your account was successfully created. Click the login link below to access the storefront.',
          btnLabel: 'Login',
          title: 'Registration successful'
        }
      },
      login: {
        email: 'E-MAIL',
        emailPlaceholder: 'your@email.com',
        emailValidationMessage: 'Please check your email format.',
        password: 'PASSWORD',
        passwordPlaceholder: 'password',
        passwordShow: 'SHOW',
        passwordHide: 'HIDE',
        passwordValidationMessage: 'Please enter password.',
        keepMeLoggedIn: 'Keep me logged in',
        login: 'Log in',
        loginUrl: PATH + 'login'
      },
      tac: {
        show: true,
        title: 'Title',
        submitText: 'Accept',
        acceptTaCUrl: PATH + 'accepttac',
        checkTaCUrl: PATH + 'checktac',
        iframeUrl: 'http://localhost:5002/terms-conditions.html'
      },
      checkout: {
        initRenderUIURL: PATH + 'checkout/ui',
        initTotalDeliveryUIURL: PATH + 'checkout/total-price',
        changeAddressURL: PATH + 'checkout/change-address',
        changeDeliveryMethodURL: PATH + 'checkout/change-delivery-method',
        changeQuantityURL: PATH + 'checkout/change-quantity',
        removeProductURL: PATH + 'checkout/remove-producs',
        submitURL: PATH + 'checkout/submit',
        saveAddressURL: PATH + 'checkout/add-new-address',
        submittableURL: '',
        addNewAddressURL: PATH + 'checkout/add-new-address',
        tAndC: {
          exists: true,
          text: 'I have reviewed <a href="#">both</a> the storefront Terms and Conditions and the order and certify that it is acceptable.'
        },
        message: 'Good day and know that all your money are belong to us'
      },
      spotfire: {
        serverUrl: 'http://10.83.71.208/spotfire/wp/',
        url: '/Kadena/Standard Reports/Inventory and Sales order Report_Single graph',
        customerId: '40000240'
      },
      userSettings: {
        addresses: {
          initUIURL: PATH + 'settings/address/ui',
          editAddressURL: PATH + 'settings/address/modify'
        }
      },
      cartPreview: {
        cartPreviewUrl: PATH + 'cartPreview'
      },
      orderDetail: {
        orderDetailUrl: PATH + 'order/detail'
      },
      searchPage: {
        searchPageUrl: PATH + 'search/result'
      },
      chiliSave: {
        url: ''
      },
      addToCartUrl: PATH + 'products/add-to-cart',
      search: {
        queryUrl: PATH + 'search/query',
        placeholder: "Search"
      },
      pagination: {
        template: {
          string: "Showing [FROM] to [TO] of [TOTAL] entries",
          from: "[FROM]",
          to: "[TO]",
          total: "[TOTAL]",
        },
        nextLabel: "Next",
        backLabel: "Previous"
      },
      ordersReports: {
        /*headings: [
          {
            id: '1',
            label: "Site"
          },
          {
            id: 'orderNumber',
            label: "Order number"
          },
          {
            id: '3',
            label: "Order date",
            sort: true,
            type: "date"
          },
          {
            id: '4',
            label: "User name"
          },
          {
            id: '5',
            label: "Product name"
          },
          {
            id: '6',
            label: "SKU"
          },
          {
            id: '7',
            label: "Quantity"
          },
          {
            id: '8',
            label: "Price"
          },
          {
            id: '9',
            label: "Status"
          },
          {
            id: '10',
            label: "Shipping date",
            type: 'date'
          },
          {
            id: '11',
            label: "Tracking number",
            type: 'tracking',
          }
        ],*/
        headings: [
          {
            id: 'site',
            label: 'Site Name',
            sort: false,
            isDate: false
          },
          {
              id: 'orderNumber',
              label: 'Order Number',
              sort: false,
              isDate: false
          },
          {
              id: 'createDate',
              label: 'Order Date',
              sort: true,
              isDate: true
          },
          {
              id: 'user',
              label: 'User',
              sort: false,
              isDate: false
          },
          {
              id: 'name',
              label: 'Item Name',
              sort: false,
              isDate: false
          },
          {
              id: 'sku',
              label: 'SKU Number',
              sort: false,
              isDate: false
          },
          {
              id: 'quantity',
              label: 'Quantity',
              sort: false,
              isDate: false
          },
          {
              id: 'price',
              label: 'Price',
              sort: false,
              isDate: false
          },
          {
              id: 'status',
              label: 'Status',
              sort: false,
              isDate: false
          },
          {
              id: 'shippingDate',
              label: 'Shipping Date',
              sort: false,
              isDate: true
          },
          {
              id: 'trackingNumber',
              label: 'Tracking Number',
              sort: false,
              isDate: false,
              type: 'number'
          }
        ],
        pageInfo: {
          filter: {
            orderDate: {
              title: 'Time between:',
              labelNow: 'Now',
              show: true
            },
            skuNumber: {
              title: 'SKU Number',
              items: [
                {
                  id: 'sku-0',
                  lavel: 'SKU-0'
                },
                {
                  id: 'sku-1',
                  lavel: 'SKU-1'
                }
              ]
            },
            itemName: {
              title: 'Item Name',
              items: [
                {
                  id: 'in-0',
                  lavel: 'IN-0'
                },
                {
                  id: 'in-1',
                  lavel: 'IN-1'
                }
              ]
            },
            orderNumber: {
              title: 'Order Number',
              items: [
                {
                  id: 'on-0',
                  lavel: 'ON-0'
                },
                {
                  id: 'on-1',
                  lavel: 'ON-1'
                }
              ]
            },
            itemStatus: {
              title: 'Item Status',
              items: [
                {
                  id: 'is-0',
                  lavel: 'IS-0'
                },
                {
                  id: 'is-1',
                  lavel: 'IS-1'
                }
              ]
            },
            submit: {
              reset: 'Rest filters',
              apply: 'Apply filters'
            }
          },
          export: {
            label: 'Export',
            url: 'https://some/api'
          },
          noOrdersMessage: 'You have no orders',
          getRowsUrl: PATH + 'order/reports/rows',
          manageOrders: {
            togglerText: 'Manage Orders',
            popupTitle: 'Manage Orders',
            popupButtons: {
              cancel: 'Cancel',
              save: 'Save'
            },
            validationMessage: 'The field are incorrect üêû',
            submitUrl: PATH + 'order/report/manage',
            /*headers: [
              {
                id: 'orderNumber',
                label: "Order number"
              },
              {
                id: '6',
                label: "SKU"
              },
              {
                id: '10',
                label: "Shipping date",
                type: "date"
              },
              {
                id: '11',
                label: "Tracking number",
                edit: true
              },
              {
                id: '15',
                label: 'Shipping Method',
                type: 'select',
                values: [
                  {
                    id: 'ready',
                    name: 'Ready',
                  },
                  {
                    id: 'approved',
                    name: 'Approved'
                  }
                ]
              },
              {
                id: '16',
                label: 'Shipped quantity',
                type: 'number'
              },
              {
                id: '17',
                label: 'Actions'
              }
            ]*/
            headers: [
              {
                  id: 'orderNumber',
                  label: 'Order Number',
                  sort: false,
                  isDate: false
              },
              {
                  id: 'sku',
                  label: 'SKU Number',
                  sort: false,
                  isDate: false
              },
              {
                  id: 'shippingDate',
                  label: 'Shipping Date',
                  sort: false,
                  isDate: true,
                  type: 'date'
              },
              {
                  id: 'trackingNumber',
                  label: 'Tracking Number',
                  sort: false,
                  isDate: false,
                  edit: true
              },
              {
                id: 'shippingMethod',
                label: 'Kadena.OrdersReport.Table.ShippingMethod',
                type: 'select',
                values: [
                  { id: 'FedEx_CUSTOMER_PRICE', name: 'FedEx customer price' },
                  { id: 'First', name: '1st class' },
                  { id: 'First#', name: 'First Class' },
                  { id: '03', name: 'Ground' },
                  { id: 'INTERNATIONAL_ECONOMY', name: 'Int\'l Economy' },
                  { id: 'INTERNATIONAL_ECONOMY###', name: 'Int\'l Ground' },
                  { id: '01', name: 'NextDayStd' },
                  { id: 'UPS_CUSTOMER_PRICE', name: 'UPS customer price' },
                  { id: 'USPS_CUSTOMER_PRICE', name: 'USPS customer price' },
                ]
              },
              {
                  id: 'shippedQuantity',
                  label: 'Kadena.OrdersReport.Table.ShippedQuantity',
                  sort: false,
                  isDate: false,
                  edit: true,
                  type: 'number'
              },
              {
                id: 'actions',
                label: 'Kadena.OrdersReport.Table.Actions'
              }
            ]
          }
        }
      },
      filteredRecentOrders: {
        placeholder: 'Order Type',
        filterItems: [
              {
                  name: 'Pre-But Orders',
                  getCampaignsUrl: PATH + 'order/recent/filtered/campaigns',
                  tabs: [
                    {
                      text: 'Orders requiring approval',
                      getOrdersUrl: PATH + 'order/recent/filtered/orders/4' // /companyId = 0
                    },
                    {
                      text: 'Orders',
                      getOrdersUrl: PATH + 'order/recent/filtered/orders/5' // /companyId = 1
                    }
                  ]
              },
              {
                name: 'General Inventory Orders',
                tabs: [
                  {
                    text: 'Orders requiring approval',
                    getOrdersUrl: PATH + 'order/recent/filtered/orders/2',
                  },
                  {
                    text: 'Orders',
                    getOrdersUrl: PATH + 'order/recent/filtered/orders/3',
                  }
                ]
              }
          ]
      },
      modifyMailingList: {
        errorList: {
          header: "We have found 8 errors in your file",
          tip: "To correct your .csv file, view the line number, go to your original file and check the respective record.",
          btns: {
            reupload: {
              text: "Reupload .csv",
              url: "#"
            },
            correct: "Correct errors"
          },
          items: [
            {
              id: "1",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "AA",
              postalCode: "94116",
              errorMessage: "Error"
            },
            {
              id: "2",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "",
              postalCode: "94116",
              errorMessage: "Error"
            }
          ]
        },
        successList: {
          header: "332 addresses have been processed successfuly",
          btns: {
            use: {
              text: "Use only correct",
              url: PATH + 'mailing-list/use-correct'
            }
          },
          items: [
            {
              id: "1",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "CA",
              postalCode: "94116"
            },
            {
              id: "2",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "CA",
              postalCode: "94116"
            },
            {
              id: "3",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "CA",
              postalCode: "94116"
            },
            {
              id: "4",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "CA",
              postalCode: "94116"
            },
            {
              id: "5",
              fullName: "Jane Doe",
              firstAddressLine: "2167 255th Ave",
              secondAddressLine: "",
              city: "San Francisco",
              state: "CA",
              postalCode: "94116"
            }
          ]
        },
        formInfo: {
          title: "We have found errors in the following entries:",
          downloadErrorFile: {
            text: "Download error file",
            url: "#"
          },
          discardChanges: "Discard changes",
          confirmChanges: {
            text: "Confirm & reprocess addresses",
            redirect: "https://google.com",
            request: PATH + 'mailing-list/reprocess'
          },
          message: {
            required: "The field is required"
          },
          fields: {
            fullName: {
              header: "Full Name",
              required: true
            },
            firstAddressLine: {
              header: "First Address Line",
              required: true
            },
            secondAddressLine: {
              header: "Second Address",
            },
            city: {
              header: "City",
              required: true
            },
            state: {
              header: "State",
              required: true,
              value: ['AA', 'BB']
            },
            postalCode: {
              header: "Postal Code",
              required: true
            },
            error: {
              header: "Error"
            }
          }
        }
      },
      checkoutButtons: {
        checkout: {
          text: 'Proceed To Checkout',
          url: '/shopping-cart.html'
        },
        products: {
          text: 'Continue Shopping',
          url: '/products.html'
        }
      },
      manageProducts: {
        templatesUrl: PATH + 'products/managed'
      },
      cardPayment: {
        URL3DSi: '',
        RedirectURL: 'hi',
        DemoURL: '/order-submitted.html',
        ResultURL: '',
        ResponseType: '',
        acceptedCards: ['visa', 'amex', 'mastercard'],
        submitButtonText: 'Proceed with payment',
        cardTypeInValidMessage: 'card type error',
        fields: {
          number: {
            label: 'Credit card number',
            inValidMessage: 'number error',
            placeholder: 'xxxx xxxx xxxx xxxx'
          },
          name: {
            label: 'Full name',
            inValidMessage: 'name error',
            placeholder: 'John Gold',
            cardLabel: 'You name'
          },
          cvc: {
            label: 'cvc',
            inValidMessage: 'cvc error',
            placeholder: 'xxx'
          },
          expiry: {
            label: 'Expiration date',
            inValidMessage: 'expiry error',
            placeholder: 'mm/yy',
            cardLabel: 'valid'
          },
        },
        APCount: '0',
        PTCount: '0',
        CustomerIdentifier_MerchantCode: 'Kadena2.0',
        CustomerIdentifier_LocationCode: 'Kadena2.0',
        CustomerIdentifier_CustomerCode: 'testActum1',
        TerminalIdentifier_LocationCode: 'Kadena2.0',
        TerminalIdentifier_TerminalCode: 'Kadena2.0',
        TerminalIdentifier_MerchantCode: 'Kadena2.0',
        CreditCard_BillingAddress_AddressLine1: '',
        CreditCard_BillingAddress_PostalCode: '',
        CreditCard_CSCIndicator: '',
        saveToProfile: {
          exists: true,
          label: 'Save to profile',
          url: ''
        }
      },
      products: {
        addToFavorites: "Set product as favorite",
        loadProductsUrl: PATH + 'products/all',
        loadFavoritesProductsUrl: PATH + 'products/favourites',
        markProductFavouriteUrl: PATH + 'products/favourite',
        unmarkProductFavouriteUrl: PATH + 'products/unfavourite',
        nodeAliasPath: "/Products"
      },
      productDetail: {
        thumbnail: { // props
          image: 'http://satyr.io/500x1000',
          border: '2px solid red',
          magnifyImage: 'http://satyr.io/1000x5000'
        },
        requiresApproval: { // props
          exists: true,
          text: 'Requires Approval'
        },
        attachments: [ // props
          {
            url: '#',
            text: 'Download processed file'
          },
          {
            url: '#',
            text: 'Download processed file'
          }
        ],
        info: { // props
          createdDate: 'Product added: Feb 15 2017',
          code: 'Product code: 326B-0815'
        },
        estimates: { // props
          header: 'Delivery',
          body: [
            {
              key: 'Production time',
              value: '7 days'
            },
            {
              key: 'Shopping cost',
              value: '$10 - $15'
            }
          ]
        },
        dynamicPrices: { // props
          header: 'Unit Price',
          body: [ // state
            {
              id: '1',
              key: '0-50 pcs',
              value: '$2.10'
            },
            {
              id: 'option-price',
              key: '50+ pcs',
              value: '$1.50'
            }
          ]
        },
        // availability: PATH + 'products/availability',
        packagingInfo: 'These come in pack 50 pcs', // props
        productOptions: {
          priceElementId: "option-price",
          priceUrl: PATH + 'products/options',
          validationMessage: 'Required üî•',
          categories: [
            {
              name: "TShirtSize", // not rendered, used in API call
              selector: "Dropdownlist", // Dropdownlist | RadioButtonsHorizontal | RadioButtonsVertical
              options: [
                {
                  name: "please select", // category default record
                  id: 0,
                  disabled : true, // user cannot select this
                  selected: true // category.CategoryDefaultRecord == category.CategoryDefaultOptions
                },
                {
                  name: "XXL", // sku.SKUName
                  id: 123,  // sku.SKUID
                  selected: false, // sku.SKUID.ToString() == category.CategoryDefaultOptions
                },
                {
                  name: "L",
                  id: 124,
                  selected: false,
                },
                {
                  name: "S",
                  id: 125,
                  selected: false,
                }
              ]
            },
            {
              name: "TShirtColor", // not rendered, used in API call
              selector: "RadioButtonsHorizontal", // Dropdownlist | RadioButtonsHorizontal | RadioButtonsVertical
              options: [
                {
                  name: "Blue", // sku.SKUName
                  id: 123,  // sku.SKUID
                  selected: false, // sku.SKUID.ToString() == category.CategoryDefaultOptions
                },
                {
                  name: "Red",
                  id: 124,
                  selected: false,
                },
                {
                  name: "Green",
                  id: 125,
                  selected: false,
                }
              ]
            }
          ]
        },
        openTemplate: { // null props
          url: '#',
          text: 'Open template in design'
        },
        description: { // props
          title: 'Description',
          text: '<p>Hello </p><p>How are you?</p>' // html
        },
        quantityText: 'Quantity Text', // not required
        addToCart: { // null props
          documentId: 'documentId',
          url: PATH + 'products/add-to-cart', // TODO: Call
          text: 'Add to cart',
          unit: 'pack of 50 (50)',
          tiers: {
            placeholder: 'Hello üèãÔ∏è',
            items: [5, 10, 15, 20, 25]
          },
          quantity: 1, // state
          quantityErrorText: 'Invalid Quantity Here',
          minQuantity: 1, // not required
          maxQuantity: 10 // not required
        }
      }
    }
  };
</script>
